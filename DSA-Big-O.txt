1. What is the Big O for this?

    1) Determine the Big O for the following algorithm: You are sitting in a room 
    with 15 people. You want to find a playmate for your dog, preferably of the same 
    breed. So you want to know if anyone out of the 15 people have the same breed 
    as your dog. You stand up and yell out, who here has a golden retriever and would 
    like to be a playdate for my golden. Someone yells - "I do, be happy to bring 
    him over"

        ANSWER: Constant or O(1)

    2) Determine the Big O for the following algorithm: You are sitting in a room with 
    15 people. You want to find a playmate for your dog who is of the same breed. So 
    you want to know if anyone out of the 15 people have the same breed as your dog. 
    You start with the first person and ask him if he has a golden retriever. He says 
    no, then you ask the next person, and the next, and the next until you find someone 
    who has a golden or there is no one else to ask.

        ANSWER: Linear or O(n)

    2. Constant or O(1) because it only has 1-2 steps that do not change with an increase
    in complexity.

    3. Polynomial or O(n^k) because as array 1 increases you exponentialy increase the 
    amount of times the 2nd for loop must interate.

    4. Linear or O(n) because the time complexity increases proportional to the size of 
    the array.

    5. Linear or O(n) because there is still only one computation for each iteration of 
    the array and the time complexity only increases proportional to the array length

    6. Polynomial or O(n^k) because the time complexity will increase n^2 due to the use
    of nested for loops 
    
    7. It returns the fibonacci sequence up to that number. Linear time complexity. As the num gets bigger, the         steps it takes increases in linear proportion. 
    
    8. Logarithmic time complexity, because as the data size increses the steps it takes to compute doesn't grow as     fast as the data size does.
    
    9. Constant. It is just returning one item given whatever size input.
    
    10. Checks to see if its a prime number. Worst case scenario is linear. Best case scenario is constant. 
    
    
    12. https://repl.it/@natsun121/Big-O-Exercises
